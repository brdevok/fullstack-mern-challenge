"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _children=_interopRequireDefault(require("../../database/schemas/children"));var _parent=_interopRequireDefault(require("../../database/schemas/parent"));var _database=_interopRequireDefault(require("../../database/database"));var _bcrypt=_interopRequireDefault(require("bcrypt"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class ChildrenController{static async createChild(parentId,data){data.password=await _bcrypt.default.hash(data.password,10);const child=new _children.default({...data,parent:parentId});let results;const session=await _database.default.startSession();try{session.startTransaction();results=await child.save();await _parent.default.updateOne({_id:parentId},{$push:{children:child._id}});await session.commitTransaction()}catch(e){await session.abortTransaction();await session.endSession();console.log(e.message);throw new Error(e.code)}await session.endSession();return results}static async getProfile(id){return await _children.default.findOne({_id:id},"name surname document").populate("parent","name surname document",_parent.default).then(results=>{return results}).catch(error=>{console.log(error.message);throw new Error(error.code)})}static async updateProfile(id,data){if(data.password)data.password=await _bcrypt.default.hash(data.password,10);else delete data.password;return await _children.default.updateOne({_id:id},data).then(results=>{return results}).catch(error=>{console.log(error.message);throw new Error(error.code)})}static async deleteChild(id,parentId){let results;const session=await _database.default.startSession();try{session.startTransaction();results=await _children.default.remove({_id:id});await _parent.default.updateOne({_id:parentId},{$pull:{children:id}});await session.commitTransaction()}catch(e){await session.abortTransaction();await session.endSession();console.log(e.message);throw new Error(e.code)}await session.endSession();return results}static async getAuthCredentials(document){return await _children.default.findOne({document},"password").then(results=>{return results}).catch(error=>{console.log(error.message);throw new Error(error.code)})}static async getChildrenList(skip=0,limit=0){return await _children.default.find({},"name surname document").populate("parent","name surname document",_parent.default).skip(skip).limit(limit).then(results=>{return results}).catch(error=>{console.log(error.message);throw new Error(error.code)})}}var _default=ChildrenController;exports.default=_default;